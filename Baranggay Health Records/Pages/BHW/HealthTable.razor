@layout BHWLayout
@using Baranggay_Health_Records.Shared
@page "/bhw/purok-health/{Purok}/{Illness:int}"
@inject Context context
@inject IJSRuntime JS

<div class="container" style="margin-top: 66px;">
    <h1 class="text-center">Purok @Purok?.ToUpper() - Illness @illnessName.ToUpper()</h1>
</div>
<div class="container" style="margin-top: 25px;">
    <div class="row">
        <div class="col d-flex justify-content-between">
            <Button Color="Color.Primary" Clicked="@GenerateRecord">Generate Record</Button>
        </div>
    </div>
    <div class="row justify-content-center" style="margin-top: 24px;">
        <div class="col-xl-10 col-xxl-9">
            <div class="card shadow">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID No.</th>
                                    <th>Full Name</th>
                                    <th>BirthDate</th>
                                    <th>Age</th>
                                    <th>Gender</th>
                                    <th>Height</th>
                                    <th>Weight</th>
                                    <th>BP</th>
                                    <th>Temperature</th>
                                    <th>Diagnosed Date</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(ResidentModel? res in Residents)
                                {
                                    @foreach(ResidentHealthStatusModel? rhs in residentHealthStatuses)
                                    {
                                        @if(res.GetID() == rhs.ResidentId)
                                        {
                                            @if(res.GetPurok() == Purok)
                                            {
                                                @if (context.isArchived(res))
                                                {
                                                    @if (context.isArchived(rhs))
                                                    {
                                                        Console.WriteLine(res.GetPurok());
                                                        @if (!context.isIllnessNone(rhs))
                                                        {
                                                            <HealthTableRow ID="@res.GetID()"
                                                            Name="@res.GetResidentFirstName()"
                                                            BirthDate="@res.GetResidentDOB()"
                                                            Age="@res.GetResidentAge()"
                                                            Gender="@res.GetResidentGender()"
                                                            Height="@rhs.GetHeight()"
                                                            Weight="@rhs.GetWeight()"
                                                            BloodPressure="@rhs.GetBloodPressure()"
                                                            Temperature="@rhs.GetTemperature()"
                                                            Date="@rhs.GetDiagnosedDate()" />
                                                        }
                                                    }
                                                }
                                            }

                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @* <div class="card-footer">
                    <nav>
                        <ul class="pagination pagination-sm mb-0 justify-content-center">
                            <li class="page-item"><a class="page-link" aria-label="Previous" href="#"><span aria-hidden="true">«</span></a></li>
                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" aria-label="Next" href="#"><span aria-hidden="true">»</span></a></li>
                        </ul>
                    </nav>
                </div> *@
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public String? Purok { get; set; }

    [Parameter]
    public int Illness { get; set; }

    public string illnessName { get; set; } = "";

    public List<ResidentModel> Residents { get; set; } = new List<ResidentModel>();
    public List<ResidentHealthStatusModel> residentHealthStatuses { get; set; } = new List<ResidentHealthStatusModel>();
    public List<IllnessModel> illnesses { get; set; } = new List<IllnessModel>();

    protected override void OnInitialized()
    {
        Residents = context.GetResidents();
        residentHealthStatuses = context.GetResidentHealthStatusesByIllness(Illness);
        illnessName = context.GetIllnessNameByID(Illness);
        illnesses = context.GetIllnesses();
        Console.WriteLine($"Fetching Table Data with the Purok number of {Purok} and Illness type of {illnessName}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine($"Fetching Table Data with the Purok number of {Purok} and Illness type of {Illness}");
            Residents = context.GetResidents();
            residentHealthStatuses = context.GetResidentHealthStatusesByIllness(Illness);
            illnesses = context.GetIllnesses();
            StateHasChanged();
        }
    }

    private void GenerateRecord()
    {
        context.GenerateRHS(residentHealthStatuses, illnesses, Residents, JS);
    }
}
