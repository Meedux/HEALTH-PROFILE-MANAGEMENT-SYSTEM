@layout BHWLayout
@page "/bhw/inventory"
@inject Context context
@inject NavigationManager NavigationManager

<div class="container" style="margin-top: 115px;">
    <h1 class="text-center">Medicine Records</h1>
</div>
@* <div class="container" style="margin-top: 13px;">

    @{
        int batchSize = 3;
        for (int i = 0; i < residentMedicines.Count; i += batchSize)
        {
            @:<div class="row" style="margin-bottom: 26px;">
            @for (int j = i; j < i + batchSize && j < residentMedicines.Count; j++)
            {
                <div class="col">
                    <InventoryCard MedicineName="@residentMedicines[j].MedicineName" MedicineTotal="@residentMedicines[j].Stock" />
                </div>
            }
            @:</div>
        }
    }

</div> *@
<div class="container" style="margin-top: 21px;">
    <div class="row">
        <div class="col d-lg-flex align-items-lg-center">
            @* <div class="input-group"><span class="input-group-text">Search</span><input class="form-control" type="text">
              <button class="btn btn-primary" type="button"><i class="fas fa-search"></i></button>
            </div> *@
            <div class="col d-flex justify-content-between">
                <Button Color="Color.Primary" Clicked="@ShowMedicineModal">Add Medicine</Button>
                <Button Color="Color.Primary" Clicked="@ShowModal">Update Stock</Button>
            </div>
        </div>
    </div>
    <div class="row justify-content-center" style="margin-top: 24px;">
        <div class="col-xl-10 col-xxl-9">
            <div class="card shadow">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID No.</th>
                                    <th>Medicine Name</th>
                                    <th>Description</th>
                                    <th>Stock</th>
                                    <th>Expiration Date</th>
                                    <th>Release Date</th>
                                </tr>
                            </thead>
                            <tbody>
                            
                                @foreach (ResidentMedicineModel medicine in residentMedicines)
                                {
                                    @if (context.isArchived(medicine))
                                    {   
                                        <MedicineRow ID="@medicine.GetID()"
                                                     MedicineName="@medicine.GetMedicineName()"
                                                     MedicineDescription="@medicine.GetDescription()"
                                                     Stock="@medicine.GetStock()"
                                                     ExpirationDate="@medicine.GetExpirationDate()"
                                                     ReleaseDate="@medicine.GetReleaseDate()" 
                                                    />
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <nav>
                        <ul class="pagination pagination-sm mb-0 justify-content-center">
                            <li class="page-item"><a class="page-link" aria-label="Previous" href="#"><span aria-hidden="true">«</span></a></li>
                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" aria-label="Next" href="#"><span aria-hidden="true">»</span></a></li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    

    <Modal @ref="@UpdateMedicineForm">
        <ModalContent Centered>
        <ModalHeader>
                <ModalTitle>New Arrivale Drug From HMO</ModalTitle>
        </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>Medicine Name: </FieldLabel>
                    <Select @bind-SelectedValue="@residentMedicine.ID" TValue="int" Class="form-control">
                        <SelectItem value="@none">None</SelectItem>
                        @foreach (var medicine in residentMedicines)
                        {
                            <SelectItem value="@medicine.ID">@medicine.MedicineName</SelectItem>
                        }
                    </Select>
                </Field>
                @if (residentMedicine.ID != 0)
                {
                    <Field>
                        <FieldLabel>Old Stock: </FieldLabel>
                        <p>@residentMedicine.GetStock()</p>
                    </Field>
                    <Field>
                        <FieldLabel>Updated Stock: </FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="@newStock"/>
                    </Field>
                    <Field>
                        <FieldLabel>Expiration Date: </FieldLabel>
                        <p>@residentMedicines.FirstOrDefault(m => m.ID == residentMedicine.ID).GetExpirationDate();</p>
                    </Field>
                }
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
                @if (residentMedicine.ID != 0)
                {
                    <Button Color="Color.Primary" Clicked="@UpdateMedicine">Save Changes</Button>
                }
            </ModalFooter>
        </ModalContent>
    </Modal>

    <Modal @ref="@AddMedicineForm">
        <ModalContent Centered>
            <ModalHeader>
                <ModalTitle>
                    Add Medicine Record
                </ModalTitle>
            </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>
                        Medicine Name
                    </FieldLabel>
                    <TextEdit Placeholder="Ex. Paracetamol" @bind-Text="@newMedicine.MedicineName" />
                </Field>

                <Field>
                    <FieldLabel>
                        Medicine Description
                    </FieldLabel>
                    <TextEdit Placeholder="Ex. For Dry Throat and Coughs" @bind-Text="@newMedicine.Description" />
                </Field>

                <Field>
                    <FieldLabel>
                        Medicine Stock
                    </FieldLabel>
                    <NumericEdit TValue="int" @bind-Value="@newMedicine.Stock" />
                </Field>

                <Field>
                    <FieldLabel>
                        Medicine Expiration Date
                    </FieldLabel>
                    <TextEdit Placeholder="mm/yyyy" @bind-Text="@newMedicine.ExpirationDate" />
                </Field>

                <Field>
                    <FieldLabel>
                        Medicine Release Date
                    </FieldLabel>
                    <TextEdit Placeholder="mm/dd/yyyy" @bind-Text="@newMedicine.ReleaseDate" />
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideMedicineModal">Close</Button>
                <Button Color="Color.Primary" Clicked="@AddMedicine">Save Changes</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
</div>

@code {

    int none = 0;
    public List<ResidentMedicineModel> residentMedicines { get; set; } = new List<ResidentMedicineModel>();
    public ResidentMedicineModel residentMedicine = new ResidentMedicineModel();
    int newStock = 0;

    protected override void OnInitialized()
    {
        residentMedicines = context.GetMedicines();
    }

    private Modal UpdateMedicineForm = new Modal();

    private Task ShowModal()
    {
        return UpdateMedicineForm.Show();
    }

    private void HideModal()
    {
        int temp = residentMedicine.GetStock();
        residentMedicine = new ResidentMedicineModel();
        residentMedicine.Stock = temp;
        UpdateMedicineForm.Hide();
    }

    private void UpdateMedicine()
    {
        context.UpdateMedicineStock(residentMedicine.ID, newStock);
        HideModal();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    Modal AddMedicineForm = new Modal();
    ResidentMedicineModel newMedicine = new ResidentMedicineModel();

    private Task ShowMedicineModal()
    {
        return AddMedicineForm.Show();
    }
    private void HideMedicineModal()
    {
        newMedicine.MedicineName = "";
        newMedicine.Description = "";
        newMedicine.Quality = 0;
        newMedicine.ExpirationDate = "";
        newMedicine.ReleaseDate = "";
        AddMedicineForm.Hide();
    }

    private void AddMedicine()
    {
        context.AddMedicine(newMedicine);
        HideModal();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}