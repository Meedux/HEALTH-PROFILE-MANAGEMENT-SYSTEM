@layout BHWLayout
@page "/bhw/medicine-record"
@inject Context context
@inject NavigationManager NavigationManager

<div class="container" style="margin-top: 115px;">
    <h1 class="text-center">Medicine Receipts</h1>
</div>
<div class="container" style="margin-top: 21px;">
    <div class="row">
        @* <div class="col-12 mb-3 d-flex align-items-center justify-content-center">
            <div class="input-group"><span class="input-group-text">Search</span><input class="form-control" type="text"><button class="btn btn-primary" type="button">Search Item</button></div>
        </div> *@
        <div class="col d-flex justify-content-between">
            <Button Color="Color.Success" Type="ButtonType.Link" To="/bhw/inventory">Inventory</Button>
        </div>
    </div>
    <div class="row justify-content-center" style="margin-top: 24px;">
        <div class="col-xl-10 col-xxl-9">
            <div class="card shadow">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID No.</th>
                                    <th>Resident Name</th>
                                    <th>Medicine</th>
                                    <th>Quantity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (MedicineReceiptModel receipt in receipts)
                                {
                                    ResidentModel resident = residents.Find(e => e != null && e.GetResidentID() == receipt.GetResidentID());
                                    ResidentMedicineModel medicine = medicines.Find(e => e != null && e.GetID() == receipt.GetMedicineID());

                                    <tr>
                                        <td>@receipt.GetID()</td>
                                        <td>
                                            @if (resident != null)
                                            {
                                                @($"{resident.GetResidentFirstName()} {resident.GetResidentLastName()}")
                                            }
                                            else
                                            {
                                                <span>Resident Not Found</span>
                                            }
                                        </td>
                                        <td>
                                            @if (medicine != null)
                                            {
                                                @medicine.GetMedicineName()
                                            }
                                            else
                                            {
                                                <span>Medicine Not Found</span>
                                            }
                                        </td>
                                        <td>@receipt.GetQuantity()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public List<MedicineReceiptModel> receipts { get; set; } = new List<MedicineReceiptModel>();
    public List<ResidentModel> residents { get; set; } = new List<ResidentModel>();
    public List<ResidentMedicineModel> medicines { get; set; } = new List<ResidentMedicineModel>();

    protected override void OnInitialized()
    {
        receipts = context.GetMedicineReceipt();
        residents = context.GetResidents();
        medicines = context.GetMedicines();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            receipts = context.GetMedicineReceipt();
            residents = context.GetResidents();
            medicines = context.GetMedicines();
        }
    }
}