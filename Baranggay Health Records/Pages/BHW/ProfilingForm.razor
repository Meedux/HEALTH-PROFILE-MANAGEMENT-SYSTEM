@layout BHWLayout
@page "/bhw/profiling-form"
@inject Context context
@inject NavigationManager NavManager


<div class="container" style="margin-top: 90px;">
    <form>
        <div class="row">
            <div class="col">
                <h1 class="text-center"><strong>Resident Form</strong></h1>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-3"><label class="form-label">First Name</label><input @bind="firstName" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
            <div class="col-xl-4"><label class="form-label">Middle Name</label><input @bind="middleName" class=" form-control" type="text" placeholder="Ex. Smith" required=""></div>
            <div class="col-xl-3"><label class="form-label">Last Name</label><input @bind="lastName" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
            <div class="col"><label class="form-label">Suffix</label><input @bind="suffix" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-md-4 offset-md-0">
                <label class="form-label">Year</label>
                <div class="input-group">
                    <Select TValue="string" @bind-Value="dobMonth" @onchange="ChangeMonth" Class="form-control">
                        <SelectItem Value="String.Empty">Select Birth Month</SelectItem>
                        @foreach (var month in months)
                        {
                            <SelectItem Value="@month">@month</SelectItem>
                        }
                    </Select>
                </div>
            </div>
            <div class="col-xl-4 offset-xl-0">
                <label class="form-label">Day</label>
                <div class="input-group">
                    <Select TValue="string" @bind-Value="dobDay" @onchange="ChangeDay" Class="form-control">
                        <SelectItem Value="String.Empty">Select Birth Day</SelectItem>
                        @foreach (var day in numbersString)
                        {
                            <SelectItem Value="@day">@day</SelectItem>
                        }
                    </Select>
                </div>
            </div>
            <div class="col-xl-4 offset-xl-0">
                <label class="form-label">Month</label>
                <div class="input-group">
                    <Select TValue="string" @bind-Value="dobYear" @onchange="ChangeYear" Class="form-control">
                        <SelectItem Value="String.Empty">Select Birth Year</SelectItem>
                        @foreach (var year in years)
                        {
                            <SelectItem Value="@year">@year</SelectItem>
                        }
                    </Select>
                </div>
            </div>
        </div>
        
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Age</label><input @bind="age" class="form-control" type="text" placeholder="age" required=""></div>
        </div>

        @if (age >= 60)
        {
            <div class="row" style="margin-top: 10px;">
                <div class="col-xl-12 offset-xl-0">
                    <label class="form-label">Senior Citizen ID No.</label>
                    <input @bind="id_no" class="form-control" type="number" placeholder="0000" required="">
                </div>
            </div>
        }
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0">
                <label class="form-label">Gender</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" id="maleRadio" name="gender" value="Male" @onchange="@(() => gender = "Male")">
                    <label class="form-check-label" for="maleRadio">Male</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" id="femaleRadio" name="gender" value="Female" @onchange="@(() => gender = "Female")">
                    <label class="form-check-label" for="femaleRadio">Female</label>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Father's Name</label><input @bind="fathers_name" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Mother's Name</label><input @bind="mothers_name" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Head of Family</label><input @bind="head" class="form-control" type="text" placeholder="Ex. Smith" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Total Number of Family</label><input @bind="num_of_fam" class="form-control" type="text" placeholder="Ex. College" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0">
                <label class="form-label">Purok</label>
                <Select TValue="string" @bind-Value="@purok" Placeholder="Select Purok...." Class="form-control" @onchange="ChangePurok">
                    <SelectItem Value="String.Empty">Select Purok Where the Resident Currently Resides</SelectItem>
                    @foreach (string pur in purokList)
                    {
                        <SelectItem Value="@pur">@pur</SelectItem>
                    }
                </Select>
            </div>

            
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0">
                <label class="form-label">PWD?</label>
                    <div class="form-check">
                    <input class="form-check-input" type="radio" id="pwdYes" checked="@(isPWD == true)" @onchange="@(() => isPWD = true)">
                        <label class="form-check-label" for="pwdYes">Yes</label>
                    </div>

                    <div class="form-check">
                    <input class="form-check-input" type="radio" id="pwdNo" checked="@(isPWD == false)" @onchange="@(() => isPWD = false)">
                        <label class="form-check-label" for="pwdNo">No</label>
                    </div>
            </div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0">
                <label class="form-label">Prenatal?</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" id="prenateYes" name="prenate" checked="@(isPrenate == true)" @onchange="@(() => isPrenate = true)">
                    <label class="form-check-label" for="prenateYes">Yes</label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="radio" id="prenateNo" name="prenate" checked="@(isPrenate == false)" @onchange="@(() => isPrenate = false)">
                    <label class="form-check-label" for="prenateNo">No</label>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0 d-flex flex-column justify-content-start">
                <label class="form-label">Illness Type</label>
                <div>
                    <button @onclick="AddInput" type="button" class="btn btn-success mb-3">Add Illness</button>
                </div>
                @for (int i = 0; i < illnessesID.Count; i++)
                {
                    int currentIndex = i;
                    <Select TValue="int" Placeholder="Select illness..." Class="form-control mb-3" @onchange="e => HandleChange(e, currentIndex)">
                        <SelectItem Value="0">None</SelectItem>
                        @foreach (var illness in Illnesses)
                        {
                            <SelectItem Value="@illness.ID">@illness.IllnessName</SelectItem>
                        }
                    </Select>
                }
            </div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0">
                <label class="form-label">Immunization</label>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="immunization1" @onchange="@(() => HandleImmunizationCheckbox("1st Dose"))">
                    <label class="form-check-label" for="immunization1">1st Dose</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="immunization2" @onchange="@(() => HandleImmunizationCheckbox("2nd Dose"))">
                    <label class="form-check-label" for="immunization2">2nd Dose</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="immunization3" @onchange="@(() => HandleImmunizationCheckbox("3rd Dose"))">
                    <label class="form-check-label" for="immunization3">3rd Dose</label>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Weight</label><input @bind="weight" class="form-control" type="text" placeholder="Ex. 100kg" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Height</label><input @bind="height" class="form-control" type="text" placeholder="Ex. 5'8" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Temperature</label><input @bind="temperature" class="form-control" type="text" placeholder="Ex. 36 degrees" required=""></div>
        </div>
        <div class="row" style="margin-top: 10px;">
            <div class="col-xl-12 offset-xl-0"><label class="form-label">Blood Pressure</label><input @bind="bloodPressure" class="form-control" type="text" placeholder="Ex. 1A" required=""></div>
        </div>
    </form>
    <button class="btn btn-success" type="button" style="margin-top: 20px;margin-bottom: 40px;margin-right: 22px;" @onclick="AddResident">ADD</button><button class="btn btn-danger" type="button" style="margin-top: 20px;margin-bottom: 40px;">Cancel</button>
</div>

@code {
    String firstName = "";
    String middleName = "";
    String lastName = "";
    String suffix = "";
    String dob = "";
    int age = 0;
    String gender = "";
    String fathers_name = "";
    String mothers_name = "";
    String head = "";
    int num_of_fam = 0;
    String purok = "";
    bool isPWD = false;
    bool isSenior = false;
    bool isPrenate = false;
    List<String> Immunization = new List<String>();
    String weight = "";
    String height = "";
    //int illnessID { get; set; }
    List<int> illnessesID = new List<int> { 0 };
    String temperature = "";
    String bloodPressure = "";
    String medicine = "";
    int id_no = 0;

    string dobDay = "";
    string dobMonth = "";
    string dobYear = "";

    string[] months = {
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
    };

    // Array of strings from 1 to 30
    string[] numbersString = new string[30];
    string[] years = new string[44];

    void ChangeMonth(ChangeEventArgs args)
    {
        var selectedValue = Convert.ToString(args.Value);
        dobMonth = (selectedValue != null) ? selectedValue : "";
        Console.WriteLine($"Selected Month: {dobMonth}");
    }

    void ChangeDay(ChangeEventArgs args)
    {
        var selectedValue = Convert.ToString(args.Value);
        dobDay = (selectedValue != null) ? selectedValue : "";
        Console.WriteLine($"Selected Day: {dobDay}");
    }

    void ChangeYear(ChangeEventArgs args)
    {
        var selectedValue = Convert.ToString(args.Value);
        dobYear = (selectedValue != null) ? selectedValue : "";
        Console.WriteLine($"Selected Year: {dobYear}");
    }


    string[] purokList = { "1A", "1B", "2", "3", "4", "5", "6", "7"};

    public List<IllnessModel> Illnesses = new List<IllnessModel>();

    public void HandleChange(ChangeEventArgs e, int index)
    {
        int selectedValue = Convert.ToInt32(e.Value);
        illnessesID[index] = selectedValue;
    }

    void AddInput()
    {
        illnessesID.Add(0);
    }

    void ChangePurok(ChangeEventArgs args)
    {
        var selectedValue = Convert.ToString(args.Value);
        purok = (selectedValue != null) ? selectedValue : "";
        Console.WriteLine($"Selected Purok: {purok}");
    }

    protected override void OnInitialized()
    {
        Illnesses = context.GetIllnesses();
        for (int i = 0; i < 30; i++)
        {
            numbersString[i] = (i + 1).ToString();
        }

        for (int i = 0; i < 44; i++)
        {
            years[i] = (1980 + i).ToString();
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Illnesses = context.GetIllnesses();
            for (int i = 0; i < 30; i++)
            {
                numbersString[i] = (i + 1).ToString();
            }

            for (int i = 0; i < 44; i++)
            {
                years[i] = (1980 + i).ToString();
            }
        }
    }


    public void AddResident()
    {
        ResidentModel newResident = new ResidentModel
            {
                FirstName = firstName,
                MiddleName = middleName,
                LastName = lastName,
                Suffix = suffix,
                Age = age,
                Dob = $"{dobMonth}/{dobDay}/{dobYear}",
                Gender = gender,
                Purok = purok,
                IsPWD = isPWD,
                IsSenior = isSenior,
                isPrenate = isPrenate,
                IDNo = id_no
            };

        ResidentHealthStatusModel newRHS = new ResidentHealthStatusModel();
        HouseholdModel newHousehold = new HouseholdModel();

        var resID = context.CreateResident(newResident);

        HashSet<int> uniqueIllnesses = new HashSet<int>();

        foreach (var illnessID in illnessesID)
        {
            if (illnessID != 0 && !uniqueIllnesses.Contains(illnessID))
            {
                context.CreateResidentIllness(illnessID, resID);
                uniqueIllnesses.Add(illnessID);
            }
        }

        newRHS.ResidentId = resID;
        newRHS.Weight = weight;
        newRHS.Height = height;
        newRHS.Temperature = temperature;


        newHousehold.FathersName = fathers_name;
        newHousehold.MothersName = mothers_name;
        newHousehold.Member = firstName + " " + middleName + " " + lastName;
        newHousehold.MemberID = resID;
        newHousehold.FamilyCount = num_of_fam;
        newHousehold.HeadofFamily = head;

        context.CreateHousehold(newHousehold);
        context.CreateResidentHealthStatus(newRHS);


        firstName = "";
        middleName = "";
        lastName = "";
        suffix = "";
        dob = "";
        age = 0;
        gender = "";
        fathers_name = "";
        mothers_name = "";
        head = "";
        num_of_fam = 0;
        purok = "";
        isPWD = false;
        isSenior = false;
        isPrenate = false;
        Immunization.Clear();
        weight = "";
        height = "";
        temperature = "";
        bloodPressure = "";
        medicine = "";

        NavManager.NavigateTo("/bhw/");
    }

    private void HandleImmunizationCheckbox(string dose)
    {
        if (Immunization.Contains(dose))
        {
            Immunization.Remove(dose);
        }
        else
        {
            Immunization.Add(dose);
        }
    }
}