@layout SecretaryLayout
@page "/secretary/residents"
@inject Context context
@inject IJSRuntime JS
<div class="container" style="margin-top: 80px;">
    <div class="row">
        <div class="col">
            <h1 class="text-center">Resident List</h1>
        </div>
    </div>
</div>
<div class="container" style="margin-top: 25px;">
    <div class="row">
        <div class="col d-flex justify-content-between">
            <Button Color="Color.Primary" Clicked="@GenerateRecord">Generate Record</Button>
        </div>
    </div>
    <div class="row justify-content-center" style="margin-top: 24px;">
        <div class="col-xl-10 col-xxl-9">
            <div class="card shadow">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID No.</th>
                                    <th>Last Name</th>
                                    <th>First Name</th>
                                    <th>Middle Name</th>
                                    <th>House #</th>
                                    <th>Purok</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (ResidentModel household in resident)
                                {
                                    string stringurl = $"/secretary/resident/{household.GetID()}";

                                    @if (context.isArchived(household))
                                    {
                                        <ResidentRow ID="@household.GetID()"
                                                     Lastname="@household.GetResidentLastName()"
                                                     Firstname="@household.GetResidentFirstName()"
                                                     Middlename="@household.GetResidentMiddleName()"
                                                     HouseNumber="@household.GetHouseholdNumber()"
                                                     Purok="@household.GetPurok()"
                                                     stringurl="@stringurl" />
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @*  <div class="card-footer">
                <nav>
                <ul class="pagination pagination-sm mb-0 justify-content-center">
                <li class="page-item"><a class="page-link" aria-label="Previous" href="#"><span aria-hidden="true">«</span></a></li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" aria-label="Next" href="#"><span aria-hidden="true">»</span></a></li>
                </ul>
                </nav>
                </div> *@
            </div>
        </div>
    </div>
</div>

@code {
    public List<ResidentModel> resident = new List<ResidentModel>();

    protected override void OnInitialized()
    {
        resident = context.GetResidents();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            resident = context.GetResidents();
            StateHasChanged();
        }
    }

    private void GenerateRecord()
    {
        context.GenerateResident(resident, JS);
    }
}