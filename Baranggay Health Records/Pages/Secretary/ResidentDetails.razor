@page "/secretary/resident/{ID:int}"
@layout SecretaryLayout
@inject Context context
@inject NavigationManager NavigationManager


<div class="container" style="margin-top: 86px;">
    <h1 class="text-center">Resident Details</h1>
</div>
<div class="container">
    <div class="row">
        <div class="col text-center"><img class="rounded-circle img-fluid" width="300" height="80" src="https://cdn-icons-png.flaticon.com/512/1253/1253756.png"></div>
        <div class="col">
            <div class="row">
                <div class="col d-flex justify-content-end mb-3">
                    @if (isEdit)
                    {
                        <button class="btn btn-success mr-2" @onclick="UpdateInformation">Update Information</button>
                        <a class="btn btn-warning" href="/secretary/resident/@ID">Exit</a>
                    }
                    else
                    {
                        <a class="btn btn-primary" href="/secretary/resident/@ID?isEdit=true">Edit</a>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col">
                    @if (age >= 60)
                    {
                        <p style="font-size: 26px;" class="d-flex align-items-center">
                            <strong>Senior Citizen ID #</strong>:
                            @if (isEdit)
                            {
                                <input type="number" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_id_no" />
                            }
                            else
                            {
                                @id_no
                            }
                        </p>
                    }
                    <p style="font-size: 26px;"><strong>First Name</strong>: 
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_firstName" />
                        }
                        else
                        {
                            @firstName
                        }
                    </p>
                    <p style="font-size: 26px;"><strong>Last Name</strong>: 
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_lastName" />
                        }
                        else
                        {
                            @lastName
                        }
                    </p>
                    <p style="font-size: 26px;"><strong>Middle Name</strong>:
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_middleName" />
                        }
                        else
                        {
                            @middleName
                        }
                    </p>
                    <p style="font-size: 26px;"><strong>Age</strong>: 
                        @if (isEdit)
                        {
                            <input type="number" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_age" />
                        }
                        else
                        {
                            @age
                        }
                    </p>
                    <p style="font-size: 26px;"><strong>Date of Birth</strong>: 
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-50 form-control" @bind="edited_dob" />
                        }
                        else
                        {
                            @dob
                        }
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top: 20px;">
        <div class="col">
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Gender:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_gender" />
                        }
                        else
                        {
                            @gender
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Civil Status:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_civil_status" />
                        }
                        else
                        {
                            @civil_status
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Religion:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_religion" />
                        }
                        else
                        {
                            @religion
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Occupation:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_occupation" />
                        }
                        else
                        {
                            @occupation
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Highest Educational Attainment:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <input type="text" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_ed_attain" />
                        }
                        else
                        {
                            @ed_attain
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Household Number:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        #
                        @if (isEdit)
                        {
                            <input type="number" style="margin-left: 15px;" class="w-80 form-control" @bind="edited_household_number" />
                        }
                        else
                        {
                            @household_number
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Purok:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <Select TValue="string" @bind-Value="@purok" Placeholder="Select Purok...." Class="form-control" @onchange="ChangePurok">
                                <SelectItem Value="String.Empty">Select Purok Where the Resident Currently Resides</SelectItem>
                                @foreach (string pur in purokList)
                                {
                                    <SelectItem Value="@pur">@pur</SelectItem>
                                }
                            </Select>
                        }
                        else
                        {
                            @purok
                        }
                    </p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p style="font-size: 26px;font-weight: bold;">Resident Tags:</p>
                </div>
                <div class="col">
                    <p style="font-size: 26px;">
                        @if (isEdit)
                        {
                            <button @onclick="AddInput" type="button" class="btn btn-success mb-3">Add Resident Tag</button>
                            @for (int i = 0; i < statusID.Count; i++){
                                int currentIndex = i;
                                <Select TValue="int" Placeholder="Select Resident Tag...." Class="form-control" @onchange="e => ChangeStatus(e, currentIndex)">
                                    <SelectItem Value="statusID[currentIndex]">Current tag: @context.GetStatusNameByID(statusID[currentIndex])</SelectItem>
                                    <SelectItem Value="@none">None</SelectItem>
                                    @foreach (Status dis_status in all_status)
                                    {
                                        <SelectItem Value="@dis_status.id">@dis_status.name</SelectItem>
                                    }
                                </Select>
                            }
                        }
                        else
                        {
                            if (!context.isArchived(resident))
                            {
                                @foreach (ResidentStatuses dis_status in statuses)
                                {
                                    <p>@context.GetStatusNameByID(dis_status.GetStatusID())</p>
                                }
                            }
                        }
                    </p>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter] public int ID { get; set; } = 0;

    [Parameter]
    [SupplyParameterFromQuery]
    public bool isEdit { get; set; } = true;
    int none = 0;
    string[] purokList = { "1A", "1B", "2", "3", "4", "5", "6", "7", "8", "9", "10" };
    String firstName { get; set; } = "";
    String middleName { get; set; } = "";
    String lastName { get; set; } = "";
    String suffix { get; set; } = "";
    String dob { get; set; } = "";
    int age { get; set; } = 0;
    String gender { get; set; } = "";
    String civil_status { get; set; } = "";
    String religion { get; set; } = "";
    String occupation { get; set; } = "";
    String fathers_name { get; set; } = "";
    String mothers_name { get; set; } = "";
    String head { get; set; } = "";
    int? num_of_fam { get; set; }
    String ed_attain { get; set; } = "";
    int? household_number { get; set; }
    String purok { get; set; } = "";
    int id_no { get; set; } = 0;

    int edited_status;
    int status;

    String edited_firstName { get; set; } = "";
    String edited_middleName { get; set; } = "";
    String edited_lastName { get; set; } = "";
    String edited_suffix { get; set; } = "";
    String edited_dob { get; set; } = "";
    int edited_age { get; set; }
    String edited_gender { get; set; } = "";
    String edited_civil_status { get; set; } = "";
    String edited_religion { get; set; } = "";
    String edited_occupation { get; set; } = "";
    String edited_fathers_name { get; set; } = "";
    String edited_mothers_name { get; set; } = "";
    String edited_head { get; set; } = "";
    int edited_num_of_fam { get; set; }
    String edited_ed_attain { get; set; } = "";
    int edited_household_number { get; set; }
    String edited_purok { get; set; } = "";
    int edited_id_no { get; set; } = 0;

    private List<Status> all_status = new List<Status>();
    private List<ResidentStatuses> statuses = new List<ResidentStatuses>();
    private List<int> statusID = new List<int> { 0 };

    ResidentModel resident = new ResidentModel();

    void ChangePurok(ChangeEventArgs args)
    {
        var selectedValue = Convert.ToString(args.Value);
        edited_purok = (selectedValue != null) ? selectedValue : "";
        Console.WriteLine($"Selected Purok: {purok}");
    }

    void ChangeStatus(ChangeEventArgs args, int index)
    {
        Console.WriteLine(index);
        int selectedValue = Convert.ToInt32(args.Value);
        statusID[index] = selectedValue;
    }

    void AddInput()
    {
        statusID.Add(0);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"Fetching user Data and Health status data with the user ID of {ID}");
        resident = context.GetResident(ID);
        HouseholdModel? household = context.GetHousehold(ID);
        ResidentHealthStatusModel? RHS = context.GetResidentHealthStatus(ID);
        statuses = context.GetStatuses();
        all_status = context.GetAllStatuses();


        statusID.Clear();
        foreach (ResidentStatuses stat in statuses)
        {
            int id = stat.GetStatusID();
            if (!statusID.Contains(id))
            {
                statusID.Add(id);
                Console.WriteLine(id);
            }
        }
        statusID = statusID.Distinct().ToList();


        //Fill up the Resident Details
        firstName = resident.GetResidentFirstName();
        lastName = resident.GetResidentLastName();
        middleName = resident.GetResidentMiddleName();
        age = resident.GetResidentAge();
        dob = resident.GetResidentDOB();
        gender = resident.GetResidentGender();
        civil_status = resident.GetResidentCivilStatus();
        religion = resident.GetResidentReligion();
        occupation = resident.GetOccupation();
        ed_attain = resident.GetEducationalAttainment();
        household_number = resident.GetHouseholdNumber();
        purok = resident.GetPurok();
        id_no = resident.GetIDNum();
        status = resident.GetStatus();
        // status_type = resident.GetResidentCivilStatus();

        //Fill up the Household Details
        fathers_name = household.GetFathersName();
        mothers_name = household.GetMothersName();
        head = household.GetHeadofFamily();
        num_of_fam = household.GetFamilyCount();

        //same for the edited parts
        //Fill up the Resident Details
        edited_firstName = resident.GetResidentFirstName();
        edited_lastName = resident.GetResidentLastName();
        edited_middleName = resident.GetResidentMiddleName();
        edited_age = resident.GetResidentAge();
        edited_dob = resident.GetResidentDOB();
        edited_gender = resident.GetResidentGender();
        edited_civil_status = resident.GetResidentCivilStatus();
        edited_religion = resident.GetResidentReligion();
        edited_occupation = resident.GetOccupation();
        edited_ed_attain = resident.GetEducationalAttainment();
        edited_household_number = resident.GetHouseholdNumber();
        edited_purok = resident.GetPurok();
        edited_id_no = resident.GetIDNum();
        edited_status = resident.GetStatus();

        //Fill up the Household Details
        edited_fathers_name = household.GetFathersName();
        edited_mothers_name = household.GetMothersName();
        edited_head = household.GetHeadofFamily();
        edited_num_of_fam = household.GetFamilyCount();


    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ResidentModel resident = context.GetResident(ID);
            HouseholdModel? household = context.GetHousehold(ID);
            ResidentHealthStatusModel? RHS = context.GetResidentHealthStatus(ID);
            statuses = context.GetStatuses();
            all_status = context.GetAllStatuses();

            foreach (ResidentStatuses stat in statuses)
            {
                int id = stat.GetStatusID();
                if (!statusID.Contains(id))
                {
                    statusID.Add(id);
                    Console.WriteLine(id);
                }
            }
            statusID = statusID.Distinct().ToList();


            //Fill up the Resident Details
            firstName = resident.GetResidentFirstName();
            lastName = resident.GetResidentLastName();
            middleName = resident.GetResidentMiddleName();
            age = resident.GetResidentAge();
            dob = resident.GetResidentDOB();
            gender = resident.GetResidentGender();
            civil_status = resident.GetResidentCivilStatus();
            religion = resident.GetResidentReligion();
            occupation = resident.GetOccupation();
            ed_attain = resident.GetEducationalAttainment();
            household_number = resident.GetHouseholdNumber();
            purok = resident.GetPurok();
            // status_type = resident.GetResidentCivilStatus();

            //Fill up the Household Details
            fathers_name = household.GetFathersName();
            mothers_name = household.GetMothersName();
            head = household.GetHeadofFamily();
            num_of_fam = household.GetFamilyCount();

            //same for the edited parts
            //Fill up the Resident Details
            edited_firstName = resident.GetResidentFirstName();
            edited_lastName = resident.GetResidentLastName();
            edited_middleName = resident.GetResidentMiddleName();
            edited_age = resident.GetResidentAge();
            edited_dob = resident.GetResidentDOB();
            edited_gender = resident.GetResidentGender();
            edited_civil_status = resident.GetResidentCivilStatus();
            edited_religion = resident.GetResidentReligion();
            edited_occupation = resident.GetOccupation();
            edited_ed_attain = resident.GetEducationalAttainment();
            edited_household_number = resident.GetHouseholdNumber();
            edited_purok = resident.GetPurok();

            //Fill up the Household Details
            edited_fathers_name = household.GetFathersName();
            edited_mothers_name = household.GetMothersName();
            edited_head = household.GetHeadofFamily();
            edited_num_of_fam = household.GetFamilyCount();
            StateHasChanged();
        }
    }

    private void UpdateInformation()
    {
        ResidentModel residentModel = new ResidentModel();
        residentModel.FirstName = edited_firstName;
        residentModel.LastName = edited_lastName;
        residentModel.MiddleName = edited_middleName;
        residentModel.Age = edited_age;
        residentModel.Dob = edited_dob;
        residentModel.Gender = edited_gender;
        residentModel.Civil_status = edited_civil_status;
        residentModel.Religion = edited_religion;
        residentModel.Occupation = edited_occupation;
        residentModel.Ed_attain = edited_ed_attain;
        residentModel.Household_number = edited_household_number;
        residentModel.Purok = edited_purok;
        residentModel.IDNo = edited_id_no;
        residentModel.statusId = edited_status;

        HashSet<int> unStatus = new HashSet<int>();



        HouseholdModel householdModel = new HouseholdModel();
        householdModel.FathersName = edited_fathers_name;
        householdModel.MothersName = edited_mothers_name;
        householdModel.HeadofFamily = edited_head;
        householdModel.FamilyCount = edited_num_of_fam;

        context.UpdateResident(residentModel, ID);
        context.UpdateHousehold(householdModel, ID);

        if (statusID.Count > 0)
        {
            if (context.isArchived(resident))
            {
                context.UnArchive(ID, "resident");
            }
        }

        foreach (var statID in statusID)
        {
            if (statID != 0 && !unStatus.Contains(statID))
            {
                context.CreateResidentStatus(statID, ID);
                unStatus.Add(statID);
            }
        }

        NavigationManager.NavigateTo($"/secretary/resident/{ID}");
    }
}