@page "/secretary/status"
@using Baranggay_Health_Records.Shared
@layout SecretaryLayout
@inject Context context
@inject NavigationManager NavigationManager

<div class="container" style="margin-top: 80px;">
    <div class="row">
        <div class="col">
            <h1 class="text-center">Baranggay Statuses</h1>
        </div>
    </div>
</div>
<div class="container" style="margin-top: 25px;">
    <div class="row">
        <div class="col d-flex justify-content-between">
            <Button Color="Color.Primary" Clicked="@ShowModal">Add Status</Button>
        </div>
    </div>
    <div class="row justify-content-center" style="margin-top: 24px;">
        <div class="col-xl-10 col-xxl-9">
            <div class="card shadow">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Resident Conditions</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(Status status in statuses)
                                {
                                    <StatusRow ID="@status.id" StatusType="@status.name" />
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Add Resident Condition</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Name</FieldLabel>
                <TextEdit @bind-Text="@newStatusName" Placeholder="Enter New Condition name..." />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
            <Button Color="Color.Primary" Clicked="@SaveChanges">Save Changes</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modalRef = new Modal();
    private List<Status> statuses = new List<Status>();
    private String newStatusName = String.Empty;

    protected override void OnInitialized()
    {
        statuses = context.GetAllStatuses();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            statuses = context.GetAllStatuses();
            StateHasChanged();
        }
    }

    private Task ShowModal()
    {
        return modalRef.Show();
    }

    private void HideModal()
    {

        modalRef.Hide();
    }

    private void SaveChanges()
    {
        context.AddStatus(newStatusName);
        HideModal();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}
